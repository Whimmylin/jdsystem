<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.lanqiao.mapper.ProductMapper_H" >
  <resultMap id="ProductResultMap" type="org.lanqiao.entity.Product" >
    <id column="pro_id" property="proId" jdbcType="INTEGER" />
    <result column="pro_name" property="proName" jdbcType="VARCHAR" />
    <result column="pro_price" property="proPrice" jdbcType="INTEGER" />
    <result column="pro_stock" property="proStock" jdbcType="INTEGER" />
    <result column="pro_out" property="proOut" jdbcType="DATE" />
    <result column="pro_state" property="proState" jdbcType="VARCHAR" />
    <result column="pro_detail" property="proDetail" jdbcType="VARCHAR" />
      <association property="productimg" resultMap="ProducTimgResultMap"></association>
      <collection property="productbrand" resultMap="ProductBrandResultMap"></collection>
      <collection property="productsort" resultMap="ProductSortResultMap"></collection>
  </resultMap>
    <resultMap id="ProductBrandResultMap" type="org.lanqiao.entity.ProductBrand" >
        <id column="brand_id" property="brandId" jdbcType="INTEGER" />
        <result column="brand_name" property="brandName" jdbcType="VARCHAR" />
    </resultMap>
    <resultMap id="ProductSortResultMap" type="org.lanqiao.entity.ProductSort" >
        <id column="sort_id" property="sortId" jdbcType="INTEGER" />
        <result column="sort_name" property="sortName" jdbcType="VARCHAR" />
    </resultMap>
    <resultMap id="ProducTimgResultMap" type="org.lanqiao.entity.ProductImg" >
        <id column="img_id" property="imgId" jdbcType="INTEGER" />
        <result column="pro_id" property="proId" jdbcType="INTEGER" />
        <result column="img_detail" property="imgDetail" jdbcType="VARCHAR" />
        <result column="img_URL" property="imgUrl" jdbcType="VARCHAR" />
        <result column="is_img_main" property="isImgMain" jdbcType="VARCHAR" />
    </resultMap>
    <select id="Count"  resultType="java.lang.Integer"  parameterType="org.lanqiao.entity.Key"  >
        select count(*)
        from ( select p.pro_name,p.pro_price,p.pro_stock,t.img_URL,p.pro_detail
        from product p, productbrand b,productsort s ,productimg t
        <where>
            <if test="BrandName !=null" >
                p.brand_id = (SELECT brand_id from productbrand where brand_name=#{BrandName}) AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id
                and p.pro_id=t.pro_id
            </if>
            <if test="SortName !=null">
                p.sort_id = (SELECT sort_id from productsort where sort_name=#{SortName}) AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id
                and p.pro_id=t.pro_id

            </if>
            <if test="Input !=null">
                ( p.pro_detail like "%${Input}%"  AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id and p.pro_id=t.pro_id)or
                (p.sort_id = (SELECT sort_id from productsort where sort_name like "%${Input}%") AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id AND p.pro_id=t.pro_id )or
                (p.brand_id = (SELECT brand_id from productbrand where brand_name like "%${Input}%") AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id AND p.pro_id=t.pro_id)
            </if>
            <if test="(Input='') or (Input=null)" >
                p.brand_id=b.brand_id AND p.sort_id=s.sort_id AND p.pro_id=t.pro_id
            </if>
            <if test="(PX !=null)">
                ( p.pro_detail like "%${PX}%"  AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id and p.pro_id=t.pro_id )or
                (p.sort_id = (SELECT sort_id from productsort where sort_name like "%${PX}%") AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id AND p.pro_id=t.pro_id )or
                (p.brand_id = (SELECT brand_id from productbrand where brand_name like "%${PX}%") AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id AND p.pro_id=t.pro_id )
                ORDER BY pro_price
            </if>
            <if test=" (dprice >0)and(tprice >0) ">
                p.pro_detail like "%${dtprice}%"  AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id and p.pro_id=t.pro_id
                and  #{dprice}&lt;=p.pro_price  AND  p.pro_price &lt;= #{tprice} ORDER BY pro_price

            </if>

        </where> ) f


    </select>
    <select id="FY" resultMap="ProductResultMap" parameterType="org.lanqiao.entity.Key" >
    select *
    from ( select p.pro_name,p.pro_price,p.pro_stock,t.img_URL,p.pro_detail,p.pro_id
        from product p, productbrand b,productsort s ,productimg t
        <where>
            <if test="BrandName !=null" >
                p.brand_id = (SELECT brand_id from productbrand where brand_name=#{BrandName}) AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id
                and p.pro_id=t.pro_id
            </if>
            <if test="SortName !=null">
                p.sort_id = (SELECT sort_id from productsort where sort_name=#{SortName}) AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id
                and p.pro_id=t.pro_id

            </if>
            <if test="Input !=null">
                ( p.pro_detail like "%${Input}%"  AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id and p.pro_id=t.pro_id)or
                (p.sort_id = (SELECT sort_id from productsort where sort_name like "%${Input}%") AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id AND p.pro_id=t.pro_id )or
                (p.brand_id = (SELECT brand_id from productbrand where brand_name like "%${Input}%") AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id AND p.pro_id=t.pro_id)
            </if>
            <if test="(Input='') or (Input=null)" >
                p.brand_id=b.brand_id AND p.sort_id=s.sort_id AND p.pro_id=t.pro_id
            </if>
            <if test="(PX !=null)">
                ( p.pro_detail like "%${PX}%"  AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id and p.pro_id=t.pro_id )or
                (p.sort_id = (SELECT sort_id from productsort where sort_name like "%${PX}%") AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id AND p.pro_id=t.pro_id )or
                (p.brand_id = (SELECT brand_id from productbrand where brand_name like "%${PX}%") AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id AND p.pro_id=t.pro_id )
                ORDER BY pro_price
            </if>
            <if test=" ( dprice > 0)and( tprice > 0) ">
                p.pro_detail like "%${dtprice}%"  AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id and p.pro_id=t.pro_id
                and  #{dprice}&lt;=p.pro_price  AND  p.pro_price &lt;= #{tprice} ORDER BY pro_price

            </if>

        </where> ) f  limit ${PageNum},${PageSize}

    </select>




  <select id="selectByPrimaryKey" resultMap="ProductResultMap" parameterType="org.lanqiao.entity.Key" >
--     select
--     p.pro_name,p.pro_price,p.pro_stock
--     from product p, productbrand b
--     where  p.brand_id=b.brand_id and b.brand_id=1
-- select * from product

    select
    p.pro_name,p.pro_price,p.pro_stock,t.img_URL,p.pro_detail
    from product p, productbrand b,productsort s ,productimg t
    <where>
        <if test="BrandName !=null" >
         p.brand_id = (SELECT brand_id from productbrand where brand_name=#{BrandName}) AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id
          and p.pro_id=t.pro_id
        </if>
        <if test="SortName !=null">
            p.sort_id = (SELECT sort_id from productsort where sort_name=#{SortName}) AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id
            and p.pro_id=t.pro_id

        </if>
        <if test="Input !=null">
            ( p.pro_detail like "%${Input}%"  AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id and p.pro_id=t.pro_id)or
           (p.sort_id = (SELECT sort_id from productsort where sort_name like "%${Input}%") AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id AND p.pro_id=t.pro_id )or
           (p.brand_id = (SELECT brand_id from productbrand where brand_name like "%${Input}%") AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id AND p.pro_id=t.pro_id)
        </if>
        <if test="(Input='') or (Input=null)" >
          p.brand_id=b.brand_id AND p.sort_id=s.sort_id AND p.pro_id=t.pro_id
        </if>
        <if test="(PX !=null)">
            ( p.pro_detail like "%${PX}%"  AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id and p.pro_id=t.pro_id )or
            (p.sort_id = (SELECT sort_id from productsort where sort_name like "%${PX}%") AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id AND p.pro_id=t.pro_id )or
            (p.brand_id = (SELECT brand_id from productbrand where brand_name like "%${PX}%") AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id AND p.pro_id=t.pro_id )
          ORDER BY pro_price
        </if>
        <if test=" (dprice >0)and(tprice>0) ">
            p.pro_detail like "%${dtprice}%"  AND p.brand_id=b.brand_id AND p.sort_id=s.sort_id and p.pro_id=t.pro_id
         and  #{dprice}&lt;=p.pro_price  AND  p.pro_price &lt;= #{tprice} ORDER BY pro_price

                </if>

    </where>

  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product
    where pro_id = #{proId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.lanqiao.entity.Product" >
    insert into product (pro_id, brand_id, sort_id, 
      pro_name, pro_price, pro_stock, 
      pro_out, pro_state, pro_detail
      )
    values (#{proId,jdbcType=INTEGER}, #{brandId,jdbcType=INTEGER}, #{sortId,jdbcType=INTEGER}, 
      #{proName,jdbcType=VARCHAR}, #{proPrice,jdbcType=INTEGER}, #{proStock,jdbcType=INTEGER}, 
      #{proOut,jdbcType=DATE}, #{proState,jdbcType=VARCHAR}, #{proDetail,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.lanqiao.entity.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="proId != null" >
        pro_id,
      </if>
      <if test="brandId != null" >
        brand_id,
      </if>
      <if test="sortId != null" >
        sort_id,
      </if>
      <if test="proName != null" >
        pro_name,
      </if>
      <if test="proPrice != null" >
        pro_price,
      </if>
      <if test="proStock != null" >
        pro_stock,
      </if>
      <if test="proOut != null" >
        pro_out,
      </if>
      <if test="proState != null" >
        pro_state,
      </if>
      <if test="proDetail != null" >
        pro_detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="proId != null" >
        #{proId,jdbcType=INTEGER},
      </if>
      <if test="brandId != null" >
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="sortId != null" >
        #{sortId,jdbcType=INTEGER},
      </if>
      <if test="proName != null" >
        #{proName,jdbcType=VARCHAR},
      </if>
      <if test="proPrice != null" >
        #{proPrice,jdbcType=INTEGER},
      </if>
      <if test="proStock != null" >
        #{proStock,jdbcType=INTEGER},
      </if>
      <if test="proOut != null" >
        #{proOut,jdbcType=DATE},
      </if>
      <if test="proState != null" >
        #{proState,jdbcType=VARCHAR},
      </if>
      <if test="proDetail != null" >
        #{proDetail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.lanqiao.entity.Product" >
    update product
    <set >
      <if test="brandId != null" >
        brand_id = #{brandId,jdbcType=INTEGER},
      </if>
      <if test="sortId != null" >
        sort_id = #{sortId,jdbcType=INTEGER},
      </if>
      <if test="proName != null" >
        pro_name = #{proName,jdbcType=VARCHAR},
      </if>
      <if test="proPrice != null" >
        pro_price = #{proPrice,jdbcType=INTEGER},
      </if>
      <if test="proStock != null" >
        pro_stock = #{proStock,jdbcType=INTEGER},
      </if>
      <if test="proOut != null" >
        pro_out = #{proOut,jdbcType=DATE},
      </if>
      <if test="proState != null" >
        pro_state = #{proState,jdbcType=VARCHAR},
      </if>
      <if test="proDetail != null" >
        pro_detail = #{proDetail,jdbcType=VARCHAR},
      </if>
    </set>
    where pro_id = #{proId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.lanqiao.entity.Product" >
    update product
    set brand_id = #{brandId,jdbcType=INTEGER},
      sort_id = #{sortId,jdbcType=INTEGER},
      pro_name = #{proName,jdbcType=VARCHAR},
      pro_price = #{proPrice,jdbcType=INTEGER},
      pro_stock = #{proStock,jdbcType=INTEGER},
      pro_out = #{proOut,jdbcType=DATE},
      pro_state = #{proState,jdbcType=VARCHAR},
      pro_detail = #{proDetail,jdbcType=VARCHAR}
    where pro_id = #{proId,jdbcType=INTEGER}
  </update>
</mapper>